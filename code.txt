// app.get('/', (req, res) =>{
//    res.status(200).json({message : 'Hello from the server side!'})
// })

// app.post('/', (req, res) =>{
//     res.send('You can post to this endpoint...')
// })

// exports.checkID = (req, res, next, val) =>{
//     console.log(`Tour id is : ${val}`);
//     const id = req.params.id * 1
//     if(id > tours.length){
//         return res.status(404).json({status : 'Fail', message : 'Invalid ID'})
//     }
//     next()
// }
// exports.checkBody = (req, res, next) =>{
//     console.log(req.body);
//     const {name, price} = req.body;
//     if(!name || !price){
//         return res.status(400).json({status : 'Fail', message : 'Missing name or price'})
//     }
//     next()
// }

  // const query = await Tour.find()
        //    .where('duration')
        //    .equals(5)
        //    .where('difficulty')
        //    .equals('easy')

// Build query
// 1) FILTERING
        // const queryObj = {...req.query}
        // const excludedFields = ['page', 'sort', 'limit', 'fields']
        // excludedFields.forEach(el => delete queryObj[el])

        // let queryStr = JSON.stringify(queryObj)

        // queryStr = queryStr.replace(/\b(gte|gt|lte|lt)\b/g, match => `$${match}`);
        
        // let query = Tour.find(JSON.parse(queryStr))

        // 2) SORTING
        // if(req.query.sort){
        //     const sortBy = req.query.sort.split(',').join(' ')
        //     console.log(sortBy)
        //     query = query.sort(sortBy)
        // }else{
        //     query = query.sort('-_id')
        // }

        // 3) FIELD LIMITING
        // if(req.query.fields){
        //     const fields = req.query.fields.split(',').join(' ');
        //     query = query.select(fields)
        // }else{
        //     query = query.select('-__v')
        // }
        // // 3) PAGINATION
        // const page = req.query.page * 1 || 1;
        // const limit = req.query.limit * 1 || 100;
        // const skip = (page - 1) * limit;

        // // page=2&limit=10, 1-10 page 1, 11-20 page 2, 21-30 page 3
        // query = query.skip(skip).limit(limit)

        // if(req.query.page){
        //     const numTours = await Tour.countDocuments();
        //     if(skip >= numTours) throw new Error('This page does not exist')
        // }        

// tourSchema.post('save', function(doc, next) {
//     console.log(doc)
//     next()
// })

// tourSchema.pre('save', function(next){
//     console.log('Will save document...')
//     next()
// })        